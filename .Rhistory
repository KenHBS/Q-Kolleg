str(JELlist)
head(str(JELlist))
head(str(head(JELlist)))
xmlJEL <- read_xml(JEL) %>%
xml_nodes("body") %>%
xml_nodes("main") %>%
xml_nodes("div") %>%
xml_nodes("section") %>%
xml_nodes("div") %>%
xml_nodes("table")
str(xmlJEL)
JELlist <- as_list(xmlJEL)
str(JELlist)
JEL <- POST("https://www.aeaweb.org/econlit/classificationTree.xml")
xmlJEL <- read_xml(JEL) %>%
xml_nodes("body") %>%
xml_nodes("main") %>%
xml_nodes("div") %>%
xml_nodes("section") %>%
xml_nodes("div") %>%
xml_nodes("table")
JELlist <- as_list(xmlJEL)
str(JELlist)
JEL <- POST("https://www.aeaweb.org/econlit/jelCodes.php?view=jel")
xmlJEL <- read_xml(JEL) %>%
xml_nodes("body") %>%
xml_nodes("main") %>%
xml_nodes("div") %>%
xml_nodes("section") %>%
xml_nodes("div") %>%
xml_nodes("table")
JELlist <- as_list(xmlJEL)
JEL <- POST("https://www.aeaweb.org/econlit/jelCodes.php?view=jel")
xmlJEL <- read_xml(JEL) %>%
xml_nodes("body") %>%
xml_nodes("main") %>%
xml_nodes("div") %>%
xml_nodes("section") %>%
xml_nodes("div") %>%
xml_nodes("table")
JELlist <- as_list(xmlJEL)
str(JELlist)
xmlJEL <- read_xml(JEL) %>%
xml_nodes("body") %>%
xml_nodes("main")
xmlJEL <- read_xml(JEL, as_html = T) %>%
html_nodes("body") %>%
html_nodes("main")
wiki <- POST("https://en.wikipedia.org/wiki/JEL_classification_codes")
library(httr)
library(magrittr)
library(rvest)
library(stringr)
library(XML)
wiki <- POST("https://en.wikipedia.org/wiki/JEL_classification_codes")
wikiJEL2 <- read_html(wiki) %>%
html_nodes(xpath = '//*[@id="a"]') %>%
xml_attr("value")
str(wikiJEL2)
wikiJEL2 <- read_html(wiki) %>%
html_nodes(xpath = '//*[@id="content"]') %>%
xml_attr("value")
str(wikiJEL2)
wikiJEL <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3)
wiki <- POST("https://en.wikipedia.org/wiki/JEL_classification_codes")
wikiJEL <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3)
str(wikiJEL)
wikiJEL <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_text()
str(wikiJEL)
wikiJEL <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_text()
str(wikiJEL)
wikiJEL <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4) %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
str(wikiJEL)
wikiJEL
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text
str(wikiJEL2)
wikiJEL2
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text()
wikiJEL3 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("h2") %>%
html_text()
str(wikiJEL3)
wikiJEL3
wikiJEL2
wikiJEL1
wikiJEL1 <- wikiJEL[-(c(1:7))]
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- wikiJEL1[-(c(1:7))]
wikiJEL1
head(wikiJEL1)
beg <- substr(wikiJEL1, 0, 3)
beg
sum(beg != "JEL")
wikiJEL1[beg != "JEL"]
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- wikiJEL1[substr(wikiJEL1, 0, 3) == "JEL"]
rm(wikiJEL)
rm(beg)
test <- gsub("JEL: *", "", wikiJEL1)
test
wikiJEL1 <- gsub("- ", "", wikiJEL1)
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- wikiJEL1[substr(wikiJEL1, 0, 3) == "JEL"]
wikiJEL1 <- gsub("JEL: *", "", wikiJEL1)
wikiJEL1 <- gsub("- ", "", wikiJEL1)
wikiJEL1[order(wikiJEL1)]
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text()
head(wikiJEL2)
head(wikiJEL2, 10)
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub("- ", "", htmltext)
htmltext <- htmltext[order(htmltext)]
}
wiki <- POST("https://en.wikipedia.org/wiki/JEL_classification_codes")
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub("- ", "", htmltext)
htmltext <- htmltext[order(htmltext)]
}
# The most detailed descriptions at A13-level
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
test <- clean_html(wikiJEL1)
wikiJEL1 <- wikiJEL1[substr(wikiJEL1, 0, 3) == "JEL"]
wikiJEL1 <- gsub("JEL: *", "", wikiJEL1)
wikiJEL1 <- gsub("- ", "", wikiJEL1)
wikiJEL1 <- wikiJEL1[order(wikiJEL1)]
test == wikiJEL1
# Less detailed descriptions at A1-level
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text()
wikiJEL2 <- clean_html(wikiJEL2)
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub("- *", "", htmltext)
htmltext <- htmltext[order(htmltext)]
}
# The most detailed descriptions at A13-level
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- clean_html(wikiJEL1)
# Less detailed descriptions at A1-level
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text()
wikiJEL2 <- clean_html(wikiJEL2)
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub(" - ", " ", htmltext)
htmltext <- htmltext[order(htmltext)]
}
# The most detailed descriptions at A13-level
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- clean_html(wikiJEL1)
wikiJEL1[1:10]
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub("* - *", " ", htmltext)
htmltext <- htmltext[order(htmltext)]
}
# The most detailed descriptions at A13-level
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- clean_html(wikiJEL1)
wikiJEL1[1:10]
clean_html <- function(htmltext){
htmltext <- htmltext[substr(htmltext, 0, 3) == "JEL"]
htmltext <- gsub("JEL: *", "", htmltext)
htmltext <- gsub("* â€“ *", " ", htmltext)
htmltext <- htmltext[order(htmltext)]
}
wikiJEL1 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_nodes("dl") %>%
html_nodes("dd") %>%
html_text()
wikiJEL1 <- clean_html(wikiJEL1)
wikiJEL2 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(3) %>%
html_nodes("div") %>%
`[`(4)           %>%
html_nodes("p") %>%
html_text()
wikiJEL2 <- clean_html(wikiJEL2)
wikiJEL1[1:10]
wikiJEL3[1:10]
wikiJEL3 <- gsub("*Subcategories[edit]", "", wikiJEL3)
wikiJEL3[1:10]
wikiJEL3 <- gsub("*Subcategories\[edit\]", "", wikiJEL3)
wikiJEL3 <- gsub("*Subcategories\\[edit\\]", "", wikiJEL3)
wikiJEL3 <- gsub(" JEL: ", "", wikiJEL3)
wikiJEL3 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(4)             %>%
html_nodes("h2")   %>%
html_text()
wikiJEL3 <- gsub("*Subcategories\\[edit\\]", "", wikiJEL3)
wikiJEL3 <- gsub(" JEL:", "", wikiJEL3)
wikiJEL3 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(4)             %>%
html_nodes("h2")   %>%
html_text()
wikiJEL3 <- gsub("* Subcategories\\[edit\\]", "", wikiJEL3)
wikiJEL3 <- gsub(" JEL:", "", wikiJEL3)
nrchars <- nchar(wikiJEL3)
wikiJEL3 <- substr(wikiJEL3, nrchars-1, nrchars)
wikiJEL3 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(4)             %>%
html_nodes("h2")   %>%
html_text()
wikiJEL3 <- gsub("* Subcategories\\[edit\\]", "", wikiJEL3)
wikiJEL3 <- gsub(" JEL:", "", wikiJEL3)
nrchars <- nchar(wikiJEL3)
headers <- substr(wikiJEL3, nrchars)
headers <- substr(wikiJEL3, nrchars, nrchars)
paste0(header, " ", wikiJEL3)
paste0(headers, " ", wikiJEL3)
wikiJEL3 <- paste0(headers, " ", wikiJEL3)
wikiJEL3 <- substr(wikiJEL3, 0, nrchars)
wikiJEL3
wikiJEL3 <- wikiJEL3[-c(1, length(wikiJEL3)-1, length(wikiJEL3))]
wikiJEL3
clean_headers <- function(htmltext){
htmltext <- gsub("* Subcategories\\[edit\\]", "", htmltext)
htmltext <- gsub(" JEL:", "", htmltext)
nrchars <- nchar(htmltext)
headers <- substr(htmltext, nrchars, nrchars)
htmltext <- paste0(headers, " ", htmltext)
htmltext <- substr(htmltext, 0, nrchars)
htmltext <- htmltext[-c(1, length(htmltext)-1, length(htmltext))]
return(htmltext)
}
# Most general description at A-level
wikiJEL3 <- read_html(wiki) %>%
html_nodes("body") %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(3)             %>%
html_nodes("div")  %>%
`[`(4)             %>%
html_nodes("h2")   %>%
html_text()
wikiJEL3 <- clean_headers(wikiJEL3)
wikiJEL3
JEL <- c(wikiJEL1, wikiJEL2, wikiJEL3)
JEL <- JEL[order(JEL)]
JEL[1:25]
library(RMySQL)
library(tM)
library(tm)
## Get the data in place:
con = dbConnect(MySQL(), dbname = "Q-Kolleg",
user = "schroedk.hub", password = "O9rVnS%J",
host = "neyman.wiwi.hu-berlin.de", port = 3306)
dbtt = dbGetQuery(con, "SELECT * FROM treetagger")
dbDisconnect(con)
## Also get the project code in the right place:
pcode = get_pcode(dbtt$projectcode)
rough_pcode = as.factor(substr(pcode, 1, 1))
getwd()
setwd("/Users/Ken/Q-Kolleg")
list.files()
source("helperfunctions_Q-Kolleg.R")
pcode = get_pcode(dbtt$projectcode)
rough_pcode = as.factor(substr(pcode, 1, 1))
lemmatized <- Corpus(VectorSource(dbtt$lemma))
lemmatized <- Corpus(VectorSource(dbtt$lemma))
TDM_lemma             = log_x(small_dtm(lemmatized))
TDM_lemma_bin         = small_dtm(lemmatized, weighting = weightBin)
TDM_lemma_bin_capped  = small_dtm(lemmatized, weighting = weightBin,
bounds = list(global = c(1, 175)))
TDM_lemma_capped      = log_x(small_dtm(lemmatized,
bounds = list(global = c(1,75))))
TFIDF_lemma           = small_dtm(lemmatized, weighting = weightTdIdf)
TDM = list(TDM_lemma, TDM_lemma_bin, TDM_lemma_bin_capped, TDM_lemma_capped)
TFIDF_lemma           = small_dtm(lemmatized, weighting = weightTfIdf)
TFIDF_lemma
inspect(TFIDF_lemma)
TDM = list(TDM_lemma, TDM_lemma_bin, TDM_lemma_bin_capped,
TDM_lemma_capped, TFIDF_lemma)
freqs = lapply(TDM, getfreq)
freqs
freqs[[5]]
d = lapply(TDM, function(x){dist(as.matrix(x))})
group = lapply(d, hclust, method = "ward.D")
# table predictions vs. project codes (Hierarchical clustering, Ward's):
ward_fit = lapply(group, function(x){ table(cutree(x, 4), rough_pcode)})
## K-means
kfit = lapply(d, function(x){kmeans(x, 4, nstart = 100)$cluster})
# table predictions vs. project codes (kmeans)
kmeans_fit = lapply(kfit, table, rough_pcode)
kmeans_fit
dbtt = dbGetQuery(con, "SELECT * FROM treetagger")
con = dbConnect(MySQL(), dbname = "Q-Kolleg",
user = "schroedk.hub", password = "O9rVnS%J",
host = "neyman.wiwi.hu-berlin.de", port = 3306)
dbtt = dbGetQuery(con, "SELECT * FROM treetagger")
write.csv2(dbtt, "lemmatized.csv")
getwd()
abstracts = dbGetQuery(con, "SELECT * FROM abstracts")
write.csv2(abstracts, "stemmed.csv")
dbListTables(con)
dicts = dbGetQuery(con, "SELECT * FROM dictionaries")
dicts = dbGetQuery(con, "SELECT * FROM dictionary")
write.csv2(dicts, "JELdict.csv")
